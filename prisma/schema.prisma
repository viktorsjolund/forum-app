generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
}

model post {
  id            Int           @id @default(autoincrement())
  title         String        @db.VarChar(255)
  content       String        @db.VarChar(4000)
  topic         String        @default("other") @db.VarChar(255)
  views         Int           @default(0)
  created_at    DateTime      @default(now()) @db.DateTime(0)
  updated_at    DateTime      @default(now()) @db.DateTime(0)
  author        user          @relation(fields: [authorId], references: [id])
  likes         post_like[]
  dislikes      post_dislike[]
  authorId      Int
  comments      post_comment[]
  notifications notification[]

  @@index([authorId])
  @@map("forum_post")
}

model post_comment {
  id                Int        @id @default(autoincrement())
  user_id           Int
  post_id           Int
  created_at        DateTime   @default(now()) @db.DateTime(0)
  updated_at        DateTime   @default(now()) @db.DateTime(0)
  content           String     @db.VarChar(500)
  post              post       @relation(fields: [post_id], references: [id])
  author            user       @relation(fields: [user_id], references: [id])
  replies           post_reply[]

  @@index([post_id])
  @@index([user_id])
  @@map("forum_post_comment")
}

model post_reply {
  id                Int           @id @default(autoincrement())
  user_id           Int
  comment_id        Int
  created_at        DateTime      @default(now()) @db.DateTime(0)
  updated_at        DateTime      @default(now()) @db.DateTime(0)
  content           String        @db.VarChar(500)
  comment           post_comment  @relation(fields: [comment_id], references: [id])
  author            user          @relation(fields: [user_id], references: [id])

  @@index([comment_id])
  @@index([user_id])
  @@map("forum_post_reply")
}

model user {
  id            Int    @id @default(autoincrement())
  email         String @unique(map: "email_UNIQUE") @db.VarChar(255)
  username      String @unique(map: "username_UNIQUE") @db.VarChar(255)
  password      String @db.VarChar(255)
  role          role?
  posts         post[]
  comments      post_comment[]
  replies       post_reply[]
  notifications notification[]

  @@map("forum_user")
}

model post_like {
  id       Int    @id @default(autoincrement())
  user_id  Int
  post_id  Int
  post     post   @relation(fields: [post_id], references: [id])

  @@index([post_id])
  @@map("forum_post_likes")
}

model post_dislike {
  id       Int    @id @default(autoincrement())
  user_id  Int
  post_id  Int
  post     post   @relation(fields: [post_id], references: [id])

  @@index([post_id])
  @@map("forum_post_dislikes")
}

model post_follow {
  id       Int    @id @default(autoincrement())
  user_id  Int
  post_id  Int
}

model notification {
  id           Int                    @id @default(autoincrement())
  post_id      Int
  user_id      Int
  element_id   String?                @db.VarChar(255)
  trigger      notification_trigger
  viewed       Boolean                @default(false)
  created_at   DateTime               @default(now()) @db.DateTime(0)
  post         post                   @relation(fields: [post_id], references: [id])
  user         user                   @relation(fields: [user_id], references: [id])
}

enum role {
  ADMIN
  READER
}

enum notification_trigger {
  COMMENT
  EDIT
}
